{"version":3,"sources":["routers/PrivateRoute.js","routers/PublicRoute.js","firebase/firebaseConfig.js","helpers/loadNotes.js","types/types.js","helpers/fileUpload.js","redux/actions/notes.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","redux/actions/auth.js","components/journal/Sidebar.js","components/journal/NothingSelected.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","redux/actions/ui.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/AppRouter.js","redux/reducers/notesReducer.js","redux/reducers/uiReducer.js","store/store.js","redux/reducers/authReducer.js","JournalApp.js","index.js"],"names":["PrivateRoute","isAuthenticated","Component","component","rest","localStorage","setItem","location","pathname","props","to","PublicRoute","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","login","logout","uiSetError","uiRemoveError","uiStartLoading","uiFinishLoading","notesAddNew","notesActive","notesLoad","notesUpdated","notesFileUrl","notesDelete","notesLogoutCleaning","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","type","payload","showNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","JournalEntry","date","useDispatch","noteDay","moment","className","onClick","style","backgroundSize","backgroundImage","format","JournalEntries","useSelector","state","map","displayName","Sidebar","name","signOut","newNote","Date","getTime","add","NothingSelected","useForm","initialState","useState","values","setValues","reset","newState","handleInputChange","target","value","NotesAppBar","active","screenDate","display","onChange","e","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","placeholder","autoComplete","rows","src","alt","delete","startDeleting","JournalScreen","LoginScreen","email","password","onSubmit","preventDefault","signInWithEmailAndPassword","then","user","catch","message","startLoginEmailPassword","signInWithPopup","setError","err","RegisterScreen","msgError","ui","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","console","log","startRegisterEmailPasswordName","toString","AuthRouter","exact","path","AppRouter","cheking","setCheking","isLoggedIn","setisLoggedIn","onAuthStateChanged","loading","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","uiStopLoading","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4411114f.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Redirect } from 'react-router-dom'\n\nexport const PrivateRoute = ({\n    isAuthenticated, \n    component: Component,\n    ...rest\n}) => {\n    localStorage.setItem('lastpath', rest.location.pathname)\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                ? (<Component {...props} />)\n                : (<Redirect to='/auth/login'/>)\n            )}    \n        />\n    )\n}\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Route, Redirect } from 'react-router-dom'\n\nexport const PublicRoute = ({\n    isAuthenticated, \n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                ? (<Redirect to='/'/>)\n                : (<Component {...props} />)\n            )}    \n        />\n    )\n}\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired,\n}\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBOmfVFUHS5bGuL-NmHAaTKYBTfU94_00A\",\n  authDomain: \"react-journal-app-e4f66.firebaseapp.com\",\n  projectId: \"react-journal-app-e4f66\",\n  storageBucket: \"react-journal-app-e4f66.appspot.com\",\n  messagingSenderId: \"270562688111\",\n  appId: \"1:270562688111:web:88fd764485d010831c619a\",\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\n\nexport { \n    db, \n    googleAuthProvider, \n    firebase \n};\n","import { db } from \"../firebase/firebaseConfig\";\n\nexport const loadNotes = async (uid) => {\n  const notesSnap = await db.collection(`${uid}/journal/notes`).get();\n  const notes = [];\n  notesSnap.forEach((snapHijo) => {\n    notes.push({\n      id: snapHijo.id,\n      ...snapHijo.data(),\n    });\n  });\n  return notes;\n};\n","export const types = {\n    login: '[Auth] Login',\n    logout: '[Auth] Logout',\n\n    uiSetError: '[UI] Set Error',\n    uiRemoveError: '[UI] Remove Error',\n\n    uiStartLoading: '[UI] Start loading',\n    uiFinishLoading: '[UI] Finish loading',\n\n    notesAddNew: '[Notes] New note',\n    notesActive: '[Notes] Set active note',\n    notesLoad: '[Notes] Load notes',\n    notesUpdated: '[Notes] Update note',\n    notesFileUrl: '[Notes] Update image url',\n    notesDelete: '[Notes] Delete note',\n    notesLogoutCleaning: '[Notes] Logout Cleaning'\n}","export const fileUpload = async (file) => {\n  const cloudUrl = \"https://api.cloudinary.com/v1_1/dwlla9j1z/image/upload\";\n  const formData = new FormData();\n  formData.append(\"upload_preset\", \"react-journal-app\");\n  formData.append(\"file\", file);\n\n  try {\n    const resp = await fetch(cloudUrl, {\n      method: \"POST\",\n      body: formData,\n    });\n\n    if (resp.ok) {\n      const cloudResp = await resp.json();\n      return cloudResp.secure_url;\n    } else {\n      throw await resp.json();\n    }\n  } catch (error) {\n    throw error;\n  }\n};\n","import { db } from \"../../firebase/firebaseConfig\";\nimport { loadNotes } from \"../../helpers/loadNotes\";\nimport { types } from \"../../types/types\";\nimport Swal from \"sweetalert2\";\nimport { fileUpload } from \"../../helpers/fileUpload\";\n\nexport const startNewNote = () => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    const newNote = {\n      title: \"\",\n      body: \"\",\n      date: new Date().getTime(),\n    };\n    const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\n    dispatch(activeNote(doc.id, newNote));\n    dispatch(showNewNote(doc.id, newNote));\n  };\n};\n\nexport const activeNote = (id, note) => ({\n  type: types.notesActive,\n  payload: {\n    id,\n    ...note,\n  },\n});\n\nexport const showNewNote = (id, note) => ({\n  type: types.notesAddNew,\n  payload: {\n    id,\n    ...note,\n  },\n});\n\nexport const startLoadingNotes = (uid) => {\n  return async (dispatch) => {\n    const notes = await loadNotes(uid);\n    dispatch(setNotes(notes));\n  };\n};\n\nexport const setNotes = (notes) => ({\n  type: types.notesLoad,\n  payload: notes,\n});\n\nexport const startSaveNote = (note) => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    if (!note.url) {\n      delete note.url;\n    }\n    const noteToFirestore = { ...note };\n    delete noteToFirestore.id;\n    await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\n\n    dispatch(refreshNote(note.id, noteToFirestore));\n    Swal.fire(\"Saved\", note.title, \"success\");\n  };\n};\n\nexport const refreshNote = (id, note) => ({\n  type: types.notesUpdated,\n  payload: {\n    id,\n    note: {\n      id,\n      ...note,\n    },\n  },\n});\n\nexport const startUploading = (file) => {\n  return async (dispatch, getState) => {\n    const { active: activeNote } = getState().notes;\n    Swal.fire({\n      title: \"Uploading...\",\n      text: \"Please wait...\",\n      allowOutsideClick: false,\n      didOpen: () => {\n        Swal.showLoading();\n      },\n    });\n    const fileUrl = await fileUpload(file);\n    activeNote.url = fileUrl;\n    dispatch(startSaveNote(activeNote));\n    Swal.close();\n  };\n};\n\nexport const startDeleting = (id) => {\n  return async (dispatch, getState) => {\n    const uid = getState().auth.uid;\n    await db.doc(`${uid}/journal/notes/${id}`).delete();\n\n    dispatch(deleteNote(id));\n  };\n};\n\nexport const deleteNote = (id) => ({\n  type: types.notesDelete,\n  payload: id,\n});\n\nexport const noteLogout = () => ({\n  type: types.notesLogoutCleaning,\n});\n","import React from \"react\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport { activeNote } from \"../../redux/actions/notes\";\n\nexport const JournalEntry = ({ id, date, title, body, url }) => {\n  const dispatch = useDispatch()\n  const note = {\n    date,\n    title,\n    body,\n    url,\n  }\n  const handleEntryClick = () => {\n    dispatch(activeNote(id, note))\n  }\n  const noteDay = moment(date);\n  return (\n    <div className=\"journal__entry pointer animate__animated animate__fadeIn\" onClick={handleEntryClick}>\n      {url && (\n        <div\n          className=\"journal__entry-picture\"\n          style={{\n            backgroundSize: \"cover\",\n            backgroundImage: `url(${url})`,\n          }}\n        ></div>\n      )}\n      <div className=\"journal__entry-body\">\n        <p className=\"journal__entry-title\">{title}</p>\n        <p className=\"journal__entry-content\">{body}</p>\n      </div>\n      <div className=\"journal__entry-date-box\">\n        <span>{noteDay.format(\"dddd\")}</span>\n        <h4>{noteDay.format(\"Do\")}</h4>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { JournalEntry } from \"./JournalEntry\";\n\nexport const JournalEntries = () => {\n  const { notes } = useSelector((state) => state.notes);\n  return (\n    <div className=\"journal__entries\">\n      {notes.map((note) => (\n        <JournalEntry \n            key={note.id}\n            {...note} \n        />\n      ))}\n    </div>\n  );\n};\n\n","import Swal from 'sweetalert2'\n\nimport { types } from \"../../types/types\";\nimport { firebase, googleAuthProvider } from \"../../firebase/firebaseConfig\";\n// import { finishLoading, startLoading } from \"./ui\";\nimport { noteLogout } from './notes';\n\n\nexport const startRegisterEmailPasswordName = (email, password, name) => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(async ({ user }) => {\n        await user.updateProfile({ displayName: name });\n        console.log(user);\n        dispatch(login(user.uid, user.displayName));\n      })\n      .catch((e) => {\n        Swal.fire('Error', e.message, 'error')\n      });\n  };\n};\n\nexport const login = (uid, displayName) => {\n  return {\n    type: types.login,\n    payload: {\n      uid,\n      displayName,\n    },\n  };\n};\n\nexport const startLoginEmailPassword = (email, password) => {\n  return (dispatch) => {\n    // dispatch(startLoading());\n    return firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .then(({ user }) => {\n        dispatch(login(user.uid, user.displayName));\n        // dispatch(finishLoading());\n      })\n      .catch((e) => {\n        // dispatch(finishLoading());\n        Swal.fire('Error', e.message, 'error')\n      });\n  };\n};\n\nexport const startGoogleLogin = () => {\n  return (dispatch) => {\n    firebase\n      .auth()\n      .signInWithPopup(googleAuthProvider)\n      .then(({ user }) => {\n        dispatch(login(user.uid, user.displayName));\n      });\n  };\n};\n\nexport const startLogout = () => {\n  return async (dispatch) => {\n    await firebase.auth().signOut();\n    dispatch(logout())\n    dispatch(noteLogout())\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: types.logout\n  }\n}\n\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { JournalEntries } from \"./JournalEntries\";\nimport { startLogout } from \"../../redux/actions/auth\";\nimport { startNewNote } from \"../../redux/actions/notes\";\n\nexport const Sidebar = () => {\n  const dispatch = useDispatch();\n  const { name } = useSelector((state) => state.auth);\n  const handleLogout = () => {\n    dispatch(startLogout());\n  };\n  const handleAddNew = () => {\n    dispatch(startNewNote());\n  };\n  return (\n    <aside className=\"journal__sidebar\">\n      <div className=\"journal__sidebar-navbar\">\n        <h3 className=\"mt-5\">\n          <i className=\"far fa-moon\"></i>\n          <span>{name}</span>\n        </h3>\n        <button className=\"btn\" onClick={handleLogout}>\n          Logout\n        </button>\n      </div>\n      <div className=\"journal__new-entry\" onClick={handleAddNew}>\n        <i className=\"far fa-calendar-plus fa-5x\"></i>\n        <p className=\"mt-5\">New entry</p>\n      </div>\n      <JournalEntries />\n    </aside>\n  );\n};\n","import React from 'react'\n\nexport const NothingSelected = () => {\n    return (\n        <div className='nothing__main-content'>\n            <p>Select comething\n                <br/>\n                or create an entry\n            </p>\n            <i className='far fa-star fa-4x mt-5'></i>\n        </div>\n    )\n}\n","import { useState } from \"react\";\n\nconst useForm = (initialState = {}) => {\n  const [values, setValues] = useState(initialState);\n\n  const reset = (newState = initialState) => {\n    setValues(newState);\n  };\n\n  const handleInputChange = ({ target }) => {\n    setValues({\n      ...values,\n      [target.name]: target.value,\n    });\n  };\n\n  return [values, handleInputChange, reset];\n};\n\nexport default useForm;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { startSaveNote, startUploading } from \"../../redux/actions/notes\";\n\nexport const NotesAppBar = () => {\n  const dispatch = useDispatch();\n\n  const { active } = useSelector((state) => state.notes);\n  \n  const { date } = active;\n\n  const screenDate = moment(date)\n\n  const handleSave = () => {\n    dispatch(startSaveNote(active));\n  };\n\n  const handlePictureClick = () => {\n    document.querySelector(\"#fileSelector\").click();\n  };\n  \n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      dispatch(startUploading(file));\n    }\n  };\n  return (\n    <div className=\"notes__appbar\">\n      <span>{screenDate.format(\"dddd, MMMM Do YYYY\")}</span>\n      <input\n        id=\"fileSelector\"\n        name=\"file\"\n        type=\"file\"\n        style={{ display: \"none\" }}\n        onChange={handleFileChange}\n      />\n      <div>\n        <button onClick={handlePictureClick} className=\"btn\">\n          Picture\n        </button>\n        <button className=\"btn\" onClick={handleSave}>\n          Save\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useForm from \"../../hooks/useForm\";\nimport { activeNote, startDeleting } from \"../../redux/actions/notes\";\nimport { NotesAppBar } from \"./NotesAppBar\";\n\nexport const NoteScreen = () => {\n  const dispatch = useDispatch();\n\n  const { active: note } = useSelector((state) => state.notes);\n\n  const [values, handleInputChange, reset] = useForm(note);\n\n  const { body, title, id } = values;\n\n  const activeId = useRef(note.id);\n\n  useEffect(() => {\n    if (note.id !== activeId.current) {\n      reset(note);\n      activeId.current = note.id;\n    }\n  }, [note, reset]);\n\n  useEffect(() => {\n    dispatch(activeNote(values.id, { ...values }));\n  }, [values, dispatch]);\n\n  const handleDelete = () => {\n    dispatch(startDeleting(id));\n  };\n\n  return (\n    <div className=\"notes__main-content\">\n      <NotesAppBar />\n      <div className=\"notes__content\">\n        <form>\n          <input\n            type=\"text\"\n            placeholder=\"Some awesome title\"\n            className=\"notes__title-input\"\n            autoComplete=\"off\"\n            name=\"title\"\n            value={title}\n            onChange={handleInputChange}\n          />\n          <textarea\n            placeholder=\"What happen today?\"\n            className=\"notes__textarea\"\n            name=\"body\"\n            rows=\"5\"\n            value={body}\n            onChange={handleInputChange}\n          />\n          {note.url && (\n            <div className=\"notes__image\">\n              <img src={note.url} alt=\"img\" />\n            </div>\n          )}\n        </form>\n      </div>\n      <button className=\"btn btn-danger\" onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Sidebar } from \"./Sidebar\";\nimport { NothingSelected } from \"./NothingSelected\";\nimport { NoteScreen } from \"../notes/NoteScreen\";\nimport { useSelector } from \"react-redux\";\n\nexport const JournalScreen = () => {\n  const { active } = useSelector((state) => state.notes);\n  return (\n    <div className=\"journal__main-content animate__animated animate__fadeIn\">\n      <Sidebar />\n      <main>\n        {\n          (active)\n            ? (<NoteScreen/>)\n            : (<NothingSelected/>) \n        }\n      </main>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport useForm from \"../../hooks/useForm\";\nimport {\n  startGoogleLogin,\n  startLoginEmailPassword,\n} from \"../../redux/actions/auth\";\n\nexport const LoginScreen = () => {\n  const dispatch = useDispatch();\n\n  // const { loading } = useSelector((state) => state.ui);\n\n  const [values, handleInputChange] = useForm({\n    email: \"\",\n    password: \"\",\n  });\n\n  const { email, password } = values;\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n    dispatch(startLoginEmailPassword(email, password));\n  };\n\n  const handleGoogleLogin = () => {\n    dispatch(startGoogleLogin());\n  };\n\n  return (\n    <>\n      <h3 className=\"auth__title mb-5\">Login</h3>\n      <form onSubmit={handleLogin} >\n        <input\n          className=\"auth__input\"\n          type=\"text\"\n          placeholder=\"email\"\n          autoComplete=\"false\"\n          name=\"email\"\n          value={email}\n          onChange={handleInputChange}\n        />\n        <input\n          className=\"auth__input\"\n          type=\"password\"\n          placeholder=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleInputChange}\n        />\n        <button\n          className=\"btn btn-primary btn-block\"\n          type=\"submit\"\n          // disabled={loading}\n        >\n          Login\n        </button>\n        <div className=\"auth__social-network\">\n          <p>Login with social networks</p>\n          <div className=\"google-btn\" onClick={handleGoogleLogin}>\n            <div className=\"google-icon-wrapper\">\n              <img\n                className=\"google-icon\"\n                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                alt=\"google button\"\n              />\n            </div>\n            <p className=\"btn-text\">\n              <b>Sign in with google</b>\n            </p>\n          </div>\n        </div>\n        <Link to=\"/auth/register\" className=\"link\">\n          Create new account\n        </Link>\n      </form>\n    </>\n  );\n};\n","import { types } from \"../../types/types\";\n\nexport const setError = (err) => {\n  return {\n    type: types.uiSetError,\n    payload: err\n  };\n};\n\nexport const removeError = () => {\n  return {\n    type: types.uiRemoveError\n  };\n};\n\nexport const startLoading = () => {\n  return {\n    type: types.uiStartLoading\n  };\n};\n\nexport const finishLoading = () => {\n  return {\n    type: types.uiFinishLoading\n  };\n};\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport useForm from \"../../hooks/useForm\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport validator from \"validator\";\nimport { removeError, setError } from \"../../redux/actions/ui\";\nimport { startRegisterEmailPasswordName } from \"../../redux/actions/auth\";\n\nexport const RegisterScreen = () => {\n  const dispatch = useDispatch();\n  const state = useSelector((state) => state.ui);\n  const {msgError} = state;\n\n  const [values, handleInputChange] = useForm({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n\n  const { name, email, password, password2 } = values;\n\n  const handleResgister = (e) => {\n    e.preventDefault();\n    if (isFormValid()) {\n      dispatch(startRegisterEmailPasswordName(email, password.toString() , name)) \n    }\n  };\n\n  const isFormValid = () => {\n    if (name.trim().length === 0) {\n      dispatch(setError(\"Name is required\"));\n      return false;\n    } else if (!validator.isEmail(email)) {\n      dispatch(setError(\"Email is not valid\"));\n      return false;\n    } else if (password.length < 6) {\n      dispatch(setError(\"Password should be at least 6 characters\"));\n      return false;\n    } else if (password !== password2) {\n      dispatch(setError(\"Passwords doesn`t match each other\"));\n      return false;\n    }\n\n    dispatch(removeError());\n\n    return true;\n  };\n\n  return (\n    <>\n      <h3 className=\"auth__title mb-5\">Register</h3>\n      <form onSubmit={handleResgister}>\n        {\n          msgError &&\n          (\n            <div className=\"auth__alert-error\">\n              {msgError}\n            </div>\n          )\n        }\n        <input\n          className=\"auth__input\"\n          type=\"text\"\n          placeholder=\"name\"\n          autoComplete=\"off\"\n          name=\"name\"\n          onChange={handleInputChange}\n          value={name}\n        />\n        <input\n          className=\"auth__input\"\n          type=\"text\"\n          placeholder=\"email\"\n          autoComplete=\"off\"\n          name=\"email\"\n          onChange={handleInputChange}\n          value={email}\n        />\n        <input\n          className=\"auth__input\"\n          type=\"password\"\n          placeholder=\"password\"\n          name=\"password\"\n          onChange={handleInputChange}\n          value={password}\n        />\n        <input\n          className=\"auth__input\"\n          type=\"password\"\n          placeholder=\"confirm password\"\n          name=\"password2\"\n          onChange={handleInputChange}\n          value={password2}\n        />\n        <button className=\"btn btn-primary btn-block mb-1\" type=\"submit\">\n          Register\n        </button>\n\n        <Link to=\"/auth/login\" className=\"link mt-5\">\n          Already registered?\n        </Link>\n      </form>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\nimport { RegisterScreen } from \"../components/auth/RegisterScreen\";\n\nexport const AuthRouter = () => {\n  return (\n    <div className=\"auth__main\">\n      <div className=\"auth__box-container animate__animated animate__fadeInUp\">\n        <Switch>\n          <Route exact path=\"/auth/login\" component={LoginScreen} />\n          <Route exact path=\"/auth/register\" component={RegisterScreen} />\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\nimport { PrivateRoute } from \"./PrivateRoute\";\nimport { PublicRoute } from \"./PublicRoute\";\nimport { JournalScreen } from \"../components/journal/JournalScreen\";\nimport { AuthRouter } from \"./AuthRouter\";\nimport { firebase } from \"../firebase/firebaseConfig\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../redux/actions/auth\";\nimport { startLoadingNotes } from \"../redux/actions/notes\";\n\nexport const AppRouter = () => {\n  const dispatch = useDispatch();\n\n  const [cheking, setCheking] = useState(true);\n\n  const [isLoggedIn, setisLoggedIn] = useState(false);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(async (user) => {\n      if (user?.uid) {\n        dispatch(login(user.uid, user.displayName));\n        setisLoggedIn(true);\n        dispatch(startLoadingNotes(user.uid));\n      } else {\n        setisLoggedIn(false);\n      }\n      setCheking(false);\n    });\n  }, [dispatch, setCheking, setisLoggedIn]);\n\n  if (cheking) {\n    return <h1>Cargando...</h1>;\n  }\n\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <PublicRoute\n            path=\"/auth\"\n            isAuthenticated={isLoggedIn}\n            component={AuthRouter}\n          />\n          <PrivateRoute\n            exact\n            path=\"/\"\n            isAuthenticated={isLoggedIn}\n            component={JournalScreen}\n          />\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n","import { types } from \"../../types/types\";\n\nconst initialState = {\n  notes: [],\n  active: null,\n};\n\nexport const notesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.notesActive:\n      return {\n        ...state,\n        active: {\n          ...action.payload,\n        },\n      };\n    case types.notesAddNew:\n      return {\n        ...state,\n        notes: [action.payload, ...state.notes]\n      }\n    case types.notesLoad:\n      return {\n        ...state,\n        notes: [...action.payload],\n      };\n    case types.notesUpdated:\n      return {\n        ...state,\n        notes: state.notes.map((note) =>\n          note.id === action.payload.id ? action.payload.note : note\n        ),\n      };\n    case types.notesDelete:\n      return {\n        ...state,\n        active: null,\n        notes: state.notes.filter((note) => note.id !== action.payload),\n      };\n    case types.notesLogoutCleaning:\n      return {\n        ...state,\n        active: null,\n        notes: [],\n      }  \n    default:\n      return state;\n  }\n};\n","import { types } from \"../../types/types\";\n\nconst initialState = {\n  loading: false,\n  msgError: null,\n};\n\nexport const uiReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n    case types.uiSetError:\n      return {\n        ...state,\n        msgError: action.payload\n      };\n\n    case types.uiRemoveError:\n      return {\n        ...state,\n        msgError: null\n      };\n\n    case types.uiStartLoading:\n      return {\n        ...state,\n        loading: true\n      };\n\n    case types.uiStopLoading:\n      return {\n        ...state,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from 'redux-thunk';\n\nimport { authReducer } from \"../redux/reducers/authReducer\";\nimport { notesReducer } from \"../redux/reducers/notesReducer\";\nimport { uiReducer } from \"../redux/reducers/uiReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nconst reducers = combineReducers({\n  auth: authReducer,\n  ui: uiReducer,\n  notes: notesReducer,\n});\n\nexport const store = createStore(\n    reducers,\n    composeEnhancers(\n      applyMiddleware(thunk)\n    )\n    );\n","import { types } from \"../../types/types\";\n\nexport const authReducer = (state = {}, action) => {\n  switch (action.type) {\n    case types.login:\n      return {\n        uid: action.payload.uid,\n        name: action.payload.displayName,\n      };\n    case types.logout:\n      return {};\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\n\nimport { AppRouter } from \"./routers/AppRouter\";\nimport { store } from \"./store/store\";\n\nexport const JournalApp = () => {\n  return (\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\n\nimport './styles/styles.scss';\n\nReactDOM.render(\n    <JournalApp/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}